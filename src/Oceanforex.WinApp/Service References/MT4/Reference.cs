//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oceanforex.WinApp.MT4 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeRecordSE", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class TradeRecordSE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ClosePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CloseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MarginRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OpenPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StopLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TakeProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClosePrice {
            get {
                return this.ClosePriceField;
            }
            set {
                if ((this.ClosePriceField.Equals(value) != true)) {
                    this.ClosePriceField = value;
                    this.RaisePropertyChanged("ClosePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CloseTime {
            get {
                return this.CloseTimeField;
            }
            set {
                if ((this.CloseTimeField.Equals(value) != true)) {
                    this.CloseTimeField = value;
                    this.RaisePropertyChanged("CloseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((this.CmdField.Equals(value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Digits {
            get {
                return this.DigitsField;
            }
            set {
                if ((this.DigitsField.Equals(value) != true)) {
                    this.DigitsField = value;
                    this.RaisePropertyChanged("Digits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expiration {
            get {
                return this.ExpirationField;
            }
            set {
                if ((this.ExpirationField.Equals(value) != true)) {
                    this.ExpirationField = value;
                    this.RaisePropertyChanged("Expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Login {
            get {
                return this.LoginField;
            }
            set {
                if ((this.LoginField.Equals(value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MarginRate {
            get {
                return this.MarginRateField;
            }
            set {
                if ((this.MarginRateField.Equals(value) != true)) {
                    this.MarginRateField = value;
                    this.RaisePropertyChanged("MarginRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OpenPrice {
            get {
                return this.OpenPriceField;
            }
            set {
                if ((this.OpenPriceField.Equals(value) != true)) {
                    this.OpenPriceField = value;
                    this.RaisePropertyChanged("OpenPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenTime {
            get {
                return this.OpenTimeField;
            }
            set {
                if ((this.OpenTimeField.Equals(value) != true)) {
                    this.OpenTimeField = value;
                    this.RaisePropertyChanged("OpenTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Profit {
            get {
                return this.ProfitField;
            }
            set {
                if ((this.ProfitField.Equals(value) != true)) {
                    this.ProfitField = value;
                    this.RaisePropertyChanged("Profit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Spread {
            get {
                return this.SpreadField;
            }
            set {
                if ((this.SpreadField.Equals(value) != true)) {
                    this.SpreadField = value;
                    this.RaisePropertyChanged("Spread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StopLoss {
            get {
                return this.StopLossField;
            }
            set {
                if ((this.StopLossField.Equals(value) != true)) {
                    this.StopLossField = value;
                    this.RaisePropertyChanged("StopLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Storage {
            get {
                return this.StorageField;
            }
            set {
                if ((this.StorageField.Equals(value) != true)) {
                    this.StorageField = value;
                    this.RaisePropertyChanged("Storage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TakeProfit {
            get {
                return this.TakeProfitField;
            }
            set {
                if ((this.TakeProfitField.Equals(value) != true)) {
                    this.TakeProfitField = value;
                    this.RaisePropertyChanged("TakeProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Taxes {
            get {
                return this.TaxesField;
            }
            set {
                if ((this.TaxesField.Equals(value) != true)) {
                    this.TaxesField = value;
                    this.RaisePropertyChanged("Taxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ValueDate {
            get {
                return this.ValueDateField;
            }
            set {
                if ((this.ValueDateField.Equals(value) != true)) {
                    this.ValueDateField = value;
                    this.RaisePropertyChanged("ValueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarginLevelSE", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class MarginLevelSE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MarginFreeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MarginLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarginTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Equity {
            get {
                return this.EquityField;
            }
            set {
                if ((this.EquityField.Equals(value) != true)) {
                    this.EquityField = value;
                    this.RaisePropertyChanged("Equity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LevelType {
            get {
                return this.LevelTypeField;
            }
            set {
                if ((this.LevelTypeField.Equals(value) != true)) {
                    this.LevelTypeField = value;
                    this.RaisePropertyChanged("LevelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Leverage {
            get {
                return this.LeverageField;
            }
            set {
                if ((this.LeverageField.Equals(value) != true)) {
                    this.LeverageField = value;
                    this.RaisePropertyChanged("Leverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Login {
            get {
                return this.LoginField;
            }
            set {
                if ((this.LoginField.Equals(value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((this.MarginField.Equals(value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MarginFree {
            get {
                return this.MarginFreeField;
            }
            set {
                if ((this.MarginFreeField.Equals(value) != true)) {
                    this.MarginFreeField = value;
                    this.RaisePropertyChanged("MarginFree");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MarginLevel {
            get {
                return this.MarginLevelField;
            }
            set {
                if ((this.MarginLevelField.Equals(value) != true)) {
                    this.MarginLevelField = value;
                    this.RaisePropertyChanged("MarginLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarginType {
            get {
                return this.MarginTypeField;
            }
            set {
                if ((this.MarginTypeField.Equals(value) != true)) {
                    this.MarginTypeField = value;
                    this.RaisePropertyChanged("MarginType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Updated {
            get {
                return this.UpdatedField;
            }
            set {
                if ((this.UpdatedField.Equals(value) != true)) {
                    this.UpdatedField = value;
                    this.RaisePropertyChanged("Updated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SymbolInfoSE", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class SymbolInfoSE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CommissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpreadBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisibleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Ask {
            get {
                return this.AskField;
            }
            set {
                if ((this.AskField.Equals(value) != true)) {
                    this.AskField = value;
                    this.RaisePropertyChanged("Ask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Bid {
            get {
                return this.BidField;
            }
            set {
                if ((this.BidField.Equals(value) != true)) {
                    this.BidField = value;
                    this.RaisePropertyChanged("Bid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommType {
            get {
                return this.CommTypeField;
            }
            set {
                if ((this.CommTypeField.Equals(value) != true)) {
                    this.CommTypeField = value;
                    this.RaisePropertyChanged("CommType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Commission {
            get {
                return this.CommissionField;
            }
            set {
                if ((this.CommissionField.Equals(value) != true)) {
                    this.CommissionField = value;
                    this.RaisePropertyChanged("Commission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Digits {
            get {
                return this.DigitsField;
            }
            set {
                if ((this.DigitsField.Equals(value) != true)) {
                    this.DigitsField = value;
                    this.RaisePropertyChanged("Digits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double High {
            get {
                return this.HighField;
            }
            set {
                if ((this.HighField.Equals(value) != true)) {
                    this.HighField = value;
                    this.RaisePropertyChanged("High");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastTime {
            get {
                return this.LastTimeField;
            }
            set {
                if ((this.LastTimeField.Equals(value) != true)) {
                    this.LastTimeField = value;
                    this.RaisePropertyChanged("LastTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Low {
            get {
                return this.LowField;
            }
            set {
                if ((this.LowField.Equals(value) != true)) {
                    this.LowField = value;
                    this.RaisePropertyChanged("Low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Point {
            get {
                return this.PointField;
            }
            set {
                if ((this.PointField.Equals(value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Spread {
            get {
                return this.SpreadField;
            }
            set {
                if ((this.SpreadField.Equals(value) != true)) {
                    this.SpreadField = value;
                    this.RaisePropertyChanged("Spread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpreadBalance {
            get {
                return this.SpreadBalanceField;
            }
            set {
                if ((this.SpreadBalanceField.Equals(value) != true)) {
                    this.SpreadBalanceField = value;
                    this.RaisePropertyChanged("SpreadBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Updateflag {
            get {
                return this.UpdateflagField;
            }
            set {
                if ((this.UpdateflagField.Equals(value) != true)) {
                    this.UpdateflagField = value;
                    this.RaisePropertyChanged("Updateflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRecordSE", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class UserRecordSE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgentAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnableChangePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnableReadOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InterestRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LastIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordInvestorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrevEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrevMonthEquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrevbalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrevmonthbalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgentAccount {
            get {
                return this.AgentAccountField;
            }
            set {
                if ((this.AgentAccountField.Equals(value) != true)) {
                    this.AgentAccountField = value;
                    this.RaisePropertyChanged("AgentAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Credit {
            get {
                return this.CreditField;
            }
            set {
                if ((this.CreditField.Equals(value) != true)) {
                    this.CreditField = value;
                    this.RaisePropertyChanged("Credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Enable {
            get {
                return this.EnableField;
            }
            set {
                if ((this.EnableField.Equals(value) != true)) {
                    this.EnableField = value;
                    this.RaisePropertyChanged("Enable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnableChangePassword {
            get {
                return this.EnableChangePasswordField;
            }
            set {
                if ((this.EnableChangePasswordField.Equals(value) != true)) {
                    this.EnableChangePasswordField = value;
                    this.RaisePropertyChanged("EnableChangePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnableReadOnly {
            get {
                return this.EnableReadOnlyField;
            }
            set {
                if ((this.EnableReadOnlyField.Equals(value) != true)) {
                    this.EnableReadOnlyField = value;
                    this.RaisePropertyChanged("EnableReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InterestRate {
            get {
                return this.InterestRateField;
            }
            set {
                if ((this.InterestRateField.Equals(value) != true)) {
                    this.InterestRateField = value;
                    this.RaisePropertyChanged("InterestRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LastIp {
            get {
                return this.LastIpField;
            }
            set {
                if ((this.LastIpField.Equals(value) != true)) {
                    this.LastIpField = value;
                    this.RaisePropertyChanged("LastIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Lastdate {
            get {
                return this.LastdateField;
            }
            set {
                if ((this.LastdateField.Equals(value) != true)) {
                    this.LastdateField = value;
                    this.RaisePropertyChanged("Lastdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Leverage {
            get {
                return this.LeverageField;
            }
            set {
                if ((this.LeverageField.Equals(value) != true)) {
                    this.LeverageField = value;
                    this.RaisePropertyChanged("Leverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Login {
            get {
                return this.LoginField;
            }
            set {
                if ((this.LoginField.Equals(value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordInvestor {
            get {
                return this.PasswordInvestorField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordInvestorField, value) != true)) {
                    this.PasswordInvestorField = value;
                    this.RaisePropertyChanged("PasswordInvestor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordPhone {
            get {
                return this.PasswordPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordPhoneField, value) != true)) {
                    this.PasswordPhoneField = value;
                    this.RaisePropertyChanged("PasswordPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrevEquity {
            get {
                return this.PrevEquityField;
            }
            set {
                if ((this.PrevEquityField.Equals(value) != true)) {
                    this.PrevEquityField = value;
                    this.RaisePropertyChanged("PrevEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrevMonthEquity {
            get {
                return this.PrevMonthEquityField;
            }
            set {
                if ((this.PrevMonthEquityField.Equals(value) != true)) {
                    this.PrevMonthEquityField = value;
                    this.RaisePropertyChanged("PrevMonthEquity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Prevbalance {
            get {
                return this.PrevbalanceField;
            }
            set {
                if ((this.PrevbalanceField.Equals(value) != true)) {
                    this.PrevbalanceField = value;
                    this.RaisePropertyChanged("Prevbalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Prevmonthbalance {
            get {
                return this.PrevmonthbalanceField;
            }
            set {
                if ((this.PrevmonthbalanceField.Equals(value) != true)) {
                    this.PrevmonthbalanceField = value;
                    this.RaisePropertyChanged("Prevmonthbalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Regdate {
            get {
                return this.RegdateField;
            }
            set {
                if ((this.RegdateField.Equals(value) != true)) {
                    this.RegdateField = value;
                    this.RaisePropertyChanged("Regdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Taxes {
            get {
                return this.TaxesField;
            }
            set {
                if ((this.TaxesField.Equals(value) != true)) {
                    this.TaxesField = value;
                    this.RaisePropertyChanged("Taxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MT4OperResult", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Oceanforex.WinApp.MT4.TradeOpenRsponseModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Oceanforex.WinApp.MT4.TradeCloseResponseModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Oceanforex.WinApp.MT4.TradeModifyResponseModel))]
    public partial class MT4OperResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReturnValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDescription {
            get {
                return this.ErrorDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDescriptionField, value) != true)) {
                    this.ErrorDescriptionField = value;
                    this.RaisePropertyChanged("ErrorDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReturnValue {
            get {
                return this.ReturnValueField;
            }
            set {
                if ((this.ReturnValueField.Equals(value) != true)) {
                    this.ReturnValueField = value;
                    this.RaisePropertyChanged("ReturnValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeOpenRsponseModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping.Models")]
    [System.SerializableAttribute()]
    public partial class TradeOpenRsponseModel : Oceanforex.WinApp.MT4.MT4OperResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Oceanforex.WinApp.MT4.TradeOpenModel OpenModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Oceanforex.WinApp.MT4.TradeOpenModel OpenModel {
            get {
                return this.OpenModelField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenModelField, value) != true)) {
                    this.OpenModelField = value;
                    this.RaisePropertyChanged("OpenModel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeCloseResponseModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping.Models")]
    [System.SerializableAttribute()]
    public partial class TradeCloseResponseModel : Oceanforex.WinApp.MT4.MT4OperResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Oceanforex.WinApp.MT4.TradeCloseModel CloseModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Oceanforex.WinApp.MT4.TradeCloseModel CloseModel {
            get {
                return this.CloseModelField;
            }
            set {
                if ((object.ReferenceEquals(this.CloseModelField, value) != true)) {
                    this.CloseModelField = value;
                    this.RaisePropertyChanged("CloseModel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeModifyResponseModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping.Models")]
    [System.SerializableAttribute()]
    public partial class TradeModifyResponseModel : Oceanforex.WinApp.MT4.MT4OperResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Oceanforex.WinApp.MT4.TradeModifyModel ModifyModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Oceanforex.WinApp.MT4.TradeModifyModel ModifyModel {
            get {
                return this.ModifyModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifyModelField, value) != true)) {
                    this.ModifyModelField = value;
                    this.RaisePropertyChanged("ModifyModel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeOpenModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping.Models")]
    [System.SerializableAttribute()]
    public partial class TradeOpenModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IeDeviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StopLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TakeProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((this.CmdField.Equals(value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Crc {
            get {
                return this.CrcField;
            }
            set {
                if ((this.CrcField.Equals(value) != true)) {
                    this.CrcField = value;
                    this.RaisePropertyChanged("Crc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expiration {
            get {
                return this.ExpirationField;
            }
            set {
                if ((this.ExpirationField.Equals(value) != true)) {
                    this.ExpirationField = value;
                    this.RaisePropertyChanged("Expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IeDeviation {
            get {
                return this.IeDeviationField;
            }
            set {
                if ((this.IeDeviationField.Equals(value) != true)) {
                    this.IeDeviationField = value;
                    this.RaisePropertyChanged("IeDeviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((this.OrderByField.Equals(value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StopLoss {
            get {
                return this.StopLossField;
            }
            set {
                if ((this.StopLossField.Equals(value) != true)) {
                    this.StopLossField = value;
                    this.RaisePropertyChanged("StopLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TakeProfit {
            get {
                return this.TakeProfitField;
            }
            set {
                if ((this.TakeProfitField.Equals(value) != true)) {
                    this.TakeProfitField = value;
                    this.RaisePropertyChanged("TakeProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeCloseModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping.Models")]
    [System.SerializableAttribute()]
    public partial class TradeCloseModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Account {
            get {
                return this.AccountField;
            }
            set {
                if ((this.AccountField.Equals(value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderTicket {
            get {
                return this.OrderTicketField;
            }
            set {
                if ((this.OrderTicketField.Equals(value) != true)) {
                    this.OrderTicketField = value;
                    this.RaisePropertyChanged("OrderTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeModifyModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping.Models")]
    [System.SerializableAttribute()]
    public partial class TradeModifyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ClosePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CloseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTicketField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClosePrice {
            get {
                return this.ClosePriceField;
            }
            set {
                if ((this.ClosePriceField.Equals(value) != true)) {
                    this.ClosePriceField = value;
                    this.RaisePropertyChanged("ClosePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CloseTime {
            get {
                return this.CloseTimeField;
            }
            set {
                if ((this.CloseTimeField.Equals(value) != true)) {
                    this.CloseTimeField = value;
                    this.RaisePropertyChanged("CloseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderTicket {
            get {
                return this.OrderTicketField;
            }
            set {
                if ((this.OrderTicketField.Equals(value) != true)) {
                    this.OrderTicketField = value;
                    this.RaisePropertyChanged("OrderTicket");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumMT4Stats", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    public enum EnumMT4Stats : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByYear = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByMonth = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ByWeek = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MT4HistoryStats", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class MT4HistoryStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoseCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan MaxTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Oceanforex.WinApp.MT4.EnumMT4Stats StatsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoseCount {
            get {
                return this.LoseCountField;
            }
            set {
                if ((this.LoseCountField.Equals(value) != true)) {
                    this.LoseCountField = value;
                    this.RaisePropertyChanged("LoseCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxLoss {
            get {
                return this.MaxLossField;
            }
            set {
                if ((this.MaxLossField.Equals(value) != true)) {
                    this.MaxLossField = value;
                    this.RaisePropertyChanged("MaxLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxLots {
            get {
                return this.MaxLotsField;
            }
            set {
                if ((this.MaxLotsField.Equals(value) != true)) {
                    this.MaxLotsField = value;
                    this.RaisePropertyChanged("MaxLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxProfit {
            get {
                return this.MaxProfitField;
            }
            set {
                if ((this.MaxProfitField.Equals(value) != true)) {
                    this.MaxProfitField = value;
                    this.RaisePropertyChanged("MaxProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan MaxTime {
            get {
                return this.MaxTimeField;
            }
            set {
                if ((this.MaxTimeField.Equals(value) != true)) {
                    this.MaxTimeField = value;
                    this.RaisePropertyChanged("MaxTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxVolume {
            get {
                return this.MaxVolumeField;
            }
            set {
                if ((this.MaxVolumeField.Equals(value) != true)) {
                    this.MaxVolumeField = value;
                    this.RaisePropertyChanged("MaxVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Profit {
            get {
                return this.ProfitField;
            }
            set {
                if ((this.ProfitField.Equals(value) != true)) {
                    this.ProfitField = value;
                    this.RaisePropertyChanged("Profit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Oceanforex.WinApp.MT4.EnumMT4Stats StatsType {
            get {
                return this.StatsTypeField;
            }
            set {
                if ((this.StatsTypeField.Equals(value) != true)) {
                    this.StatsTypeField = value;
                    this.RaisePropertyChanged("StatsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeCount {
            get {
                return this.TradeCountField;
            }
            set {
                if ((this.TradeCountField.Equals(value) != true)) {
                    this.TradeCountField = value;
                    this.RaisePropertyChanged("TradeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WinCount {
            get {
                return this.WinCountField;
            }
            set {
                if ((this.WinCountField.Equals(value) != true)) {
                    this.WinCountField = value;
                    this.RaisePropertyChanged("WinCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeTransInfoSE", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class TradeTransInfoSE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CmdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IeDeviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StopLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TakeProfitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((this.CmdField.Equals(value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Crc {
            get {
                return this.CrcField;
            }
            set {
                if ((this.CrcField.Equals(value) != true)) {
                    this.CrcField = value;
                    this.RaisePropertyChanged("Crc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expiration {
            get {
                return this.ExpirationField;
            }
            set {
                if ((this.ExpirationField.Equals(value) != true)) {
                    this.ExpirationField = value;
                    this.RaisePropertyChanged("Expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IeDeviation {
            get {
                return this.IeDeviationField;
            }
            set {
                if ((this.IeDeviationField.Equals(value) != true)) {
                    this.IeDeviationField = value;
                    this.RaisePropertyChanged("IeDeviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((this.OrderByField.Equals(value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StopLoss {
            get {
                return this.StopLossField;
            }
            set {
                if ((this.StopLossField.Equals(value) != true)) {
                    this.StopLossField = value;
                    this.RaisePropertyChanged("StopLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TakeProfit {
            get {
                return this.TakeProfitField;
            }
            set {
                if ((this.TakeProfitField.Equals(value) != true)) {
                    this.TakeProfitField = value;
                    this.RaisePropertyChanged("TakeProfit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeRecoredModifyModel", Namespace="http://schemas.datacontract.org/2004/07/MT4SymbolPumping")]
    [System.SerializableAttribute()]
    public partial class TradeRecoredModifyModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ClosePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CloseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OpenTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderTicketField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClosePrice {
            get {
                return this.ClosePriceField;
            }
            set {
                if ((this.ClosePriceField.Equals(value) != true)) {
                    this.ClosePriceField = value;
                    this.RaisePropertyChanged("ClosePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CloseTime {
            get {
                return this.CloseTimeField;
            }
            set {
                if ((this.CloseTimeField.Equals(value) != true)) {
                    this.CloseTimeField = value;
                    this.RaisePropertyChanged("CloseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OpenTime {
            get {
                return this.OpenTimeField;
            }
            set {
                if ((this.OpenTimeField.Equals(value) != true)) {
                    this.OpenTimeField = value;
                    this.RaisePropertyChanged("OpenTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderTicket {
            get {
                return this.OrderTicketField;
            }
            set {
                if ((this.OrderTicketField.Equals(value) != true)) {
                    this.OrderTicketField = value;
                    this.RaisePropertyChanged("OrderTicket");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Sl {
            get {
                return this.SlField;
            }
            set {
                if ((this.SlField.Equals(value) != true)) {
                    this.SlField = value;
                    this.RaisePropertyChanged("Sl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TP {
            get {
                return this.TPField;
            }
            set {
                if ((this.TPField.Equals(value) != true)) {
                    this.TPField = value;
                    this.RaisePropertyChanged("TP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MT4.IPumpService")]
    public interface IPumpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetAllOpenTrade", ReplyAction="http://tempuri.org/IPumpService/GetAllOpenTradeResponse")]
        Oceanforex.WinApp.MT4.TradeRecordSE[] GetAllOpenTrade();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetAllOpenTrade", ReplyAction="http://tempuri.org/IPumpService/GetAllOpenTradeResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetAllOpenTradeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetOpenTrade", ReplyAction="http://tempuri.org/IPumpService/GetOpenTradeResponse")]
        Oceanforex.WinApp.MT4.TradeRecordSE[] GetOpenTrade(int login, string group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetOpenTrade", ReplyAction="http://tempuri.org/IPumpService/GetOpenTradeResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetOpenTradeAsync(int login, string group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetOpenTradeByLogin", ReplyAction="http://tempuri.org/IPumpService/GetOpenTradeByLoginResponse")]
        Oceanforex.WinApp.MT4.TradeRecordSE[] GetOpenTradeByLogin(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetOpenTradeByLogin", ReplyAction="http://tempuri.org/IPumpService/GetOpenTradeByLoginResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetOpenTradeByLoginAsync(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetMarginLevel", ReplyAction="http://tempuri.org/IPumpService/GetMarginLevelResponse")]
        Oceanforex.WinApp.MT4.MarginLevelSE GetMarginLevel(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetMarginLevel", ReplyAction="http://tempuri.org/IPumpService/GetMarginLevelResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MarginLevelSE> GetMarginLevelAsync(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeUserPasswordCheck", ReplyAction="http://tempuri.org/IPumpService/TradeUserPasswordCheckResponse")]
        System.Nullable<bool> TradeUserPasswordCheck(int login, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeUserPasswordCheck", ReplyAction="http://tempuri.org/IPumpService/TradeUserPasswordCheckResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> TradeUserPasswordCheckAsync(int login, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetTradesRecordHistory", ReplyAction="http://tempuri.org/IPumpService/GetTradesRecordHistoryResponse")]
        Oceanforex.WinApp.MT4.TradeRecordSE[] GetTradesRecordHistory(int login, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetTradesRecordHistory", ReplyAction="http://tempuri.org/IPumpService/GetTradesRecordHistoryResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetTradesRecordHistoryAsync(int login, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetAllSymbolInfo", ReplyAction="http://tempuri.org/IPumpService/GetAllSymbolInfoResponse")]
        Oceanforex.WinApp.MT4.SymbolInfoSE[] GetAllSymbolInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetAllSymbolInfo", ReplyAction="http://tempuri.org/IPumpService/GetAllSymbolInfoResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.SymbolInfoSE[]> GetAllSymbolInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetUserRecordsByLogin", ReplyAction="http://tempuri.org/IPumpService/GetUserRecordsByLoginResponse")]
        Oceanforex.WinApp.MT4.UserRecordSE GetUserRecordsByLogin(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetUserRecordsByLogin", ReplyAction="http://tempuri.org/IPumpService/GetUserRecordsByLoginResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.UserRecordSE> GetUserRecordsByLoginAsync(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/NewUser", ReplyAction="http://tempuri.org/IPumpService/NewUserResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult NewUser(Oceanforex.WinApp.MT4.UserRecordSE userRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/NewUser", ReplyAction="http://tempuri.org/IPumpService/NewUserResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> NewUserAsync(Oceanforex.WinApp.MT4.UserRecordSE userRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeTranscationBalance", ReplyAction="http://tempuri.org/IPumpService/TradeTranscationBalanceResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult TradeTranscationBalance(int login, double balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeTranscationBalance", ReplyAction="http://tempuri.org/IPumpService/TradeTranscationBalanceResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeTranscationBalanceAsync(int login, double balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/ChangePassword", ReplyAction="http://tempuri.org/IPumpService/ChangePasswordResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult ChangePassword(int login, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/ChangePassword", ReplyAction="http://tempuri.org/IPumpService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> ChangePasswordAsync(int login, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/ChangePasswordInvestor", ReplyAction="http://tempuri.org/IPumpService/ChangePasswordInvestorResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult ChangePasswordInvestor(int login, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/ChangePasswordInvestor", ReplyAction="http://tempuri.org/IPumpService/ChangePasswordInvestorResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> ChangePasswordInvestorAsync(int login, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetAllGroup", ReplyAction="http://tempuri.org/IPumpService/GetAllGroupResponse")]
        string[] GetAllGroup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetAllGroup", ReplyAction="http://tempuri.org/IPumpService/GetAllGroupResponse")]
        System.Threading.Tasks.Task<string[]> GetAllGroupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetHistoryStats", ReplyAction="http://tempuri.org/IPumpService/GetHistoryStatsResponse")]
        Oceanforex.WinApp.MT4.MT4HistoryStats[] GetHistoryStats(int login, System.DateTime startTime, System.DateTime endTime, Oceanforex.WinApp.MT4.EnumMT4Stats statsSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetHistoryStats", ReplyAction="http://tempuri.org/IPumpService/GetHistoryStatsResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4HistoryStats[]> GetHistoryStatsAsync(int login, System.DateTime startTime, System.DateTime endTime, Oceanforex.WinApp.MT4.EnumMT4Stats statsSort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetSymbolInfo", ReplyAction="http://tempuri.org/IPumpService/GetSymbolInfoResponse")]
        Oceanforex.WinApp.MT4.SymbolInfoSE GetSymbolInfo(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/GetSymbolInfo", ReplyAction="http://tempuri.org/IPumpService/GetSymbolInfoResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.SymbolInfoSE> GetSymbolInfoAsync(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeTranscationOpen", ReplyAction="http://tempuri.org/IPumpService/TradeTranscationOpenResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult TradeTranscationOpen(Oceanforex.WinApp.MT4.TradeTransInfoSE ttim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeTranscationOpen", ReplyAction="http://tempuri.org/IPumpService/TradeTranscationOpenResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeTranscationOpenAsync(Oceanforex.WinApp.MT4.TradeTransInfoSE ttim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeOpenAll", ReplyAction="http://tempuri.org/IPumpService/TradeOpenAllResponse")]
        Oceanforex.WinApp.MT4.TradeOpenRsponseModel[] TradeOpenAll(Oceanforex.WinApp.MT4.TradeOpenModel[] trades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeOpenAll", ReplyAction="http://tempuri.org/IPumpService/TradeOpenAllResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeOpenRsponseModel[]> TradeOpenAllAsync(Oceanforex.WinApp.MT4.TradeOpenModel[] trades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeTranscationClose", ReplyAction="http://tempuri.org/IPumpService/TradeTranscationCloseResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult TradeTranscationClose(int orderTicket, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeTranscationClose", ReplyAction="http://tempuri.org/IPumpService/TradeTranscationCloseResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeTranscationCloseAsync(int orderTicket, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeCloseAll", ReplyAction="http://tempuri.org/IPumpService/TradeCloseAllResponse")]
        Oceanforex.WinApp.MT4.TradeCloseResponseModel[] TradeCloseAll(Oceanforex.WinApp.MT4.TradeCloseModel[] closes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeCloseAll", ReplyAction="http://tempuri.org/IPumpService/TradeCloseAllResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeCloseResponseModel[]> TradeCloseAllAsync(Oceanforex.WinApp.MT4.TradeCloseModel[] closes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeModifyAll", ReplyAction="http://tempuri.org/IPumpService/TradeModifyAllResponse")]
        Oceanforex.WinApp.MT4.TradeModifyResponseModel[] TradeModifyAll(Oceanforex.WinApp.MT4.TradeModifyModel[] modifys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeModifyAll", ReplyAction="http://tempuri.org/IPumpService/TradeModifyAllResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeModifyResponseModel[]> TradeModifyAllAsync(Oceanforex.WinApp.MT4.TradeModifyModel[] modifys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeDeleteAllHistory", ReplyAction="http://tempuri.org/IPumpService/TradeDeleteAllHistoryResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult TradeDeleteAllHistory(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/TradeDeleteAllHistory", ReplyAction="http://tempuri.org/IPumpService/TradeDeleteAllHistoryResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeDeleteAllHistoryAsync(int login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/AdmTradeRecordModifyTimeAndPrice", ReplyAction="http://tempuri.org/IPumpService/AdmTradeRecordModifyTimeAndPriceResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult AdmTradeRecordModifyTimeAndPrice(int _orderTicket, System.DateTime _openTime, double _openPrice, System.DateTime _closeTime, double _closePrice, double _profit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/AdmTradeRecordModifyTimeAndPrice", ReplyAction="http://tempuri.org/IPumpService/AdmTradeRecordModifyTimeAndPriceResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> AdmTradeRecordModifyTimeAndPriceAsync(int _orderTicket, System.DateTime _openTime, double _openPrice, System.DateTime _closeTime, double _closePrice, double _profit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/AdmTradeRecordModifyTime", ReplyAction="http://tempuri.org/IPumpService/AdmTradeRecordModifyTimeResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult AdmTradeRecordModifyTime(int _orderTicket, System.DateTime _openTime, System.DateTime _closeTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/AdmTradeRecordModifyTime", ReplyAction="http://tempuri.org/IPumpService/AdmTradeRecordModifyTimeResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> AdmTradeRecordModifyTimeAsync(int _orderTicket, System.DateTime _openTime, System.DateTime _closeTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/AdmTradeRecordModify", ReplyAction="http://tempuri.org/IPumpService/AdmTradeRecordModifyResponse")]
        Oceanforex.WinApp.MT4.MT4OperResult AdmTradeRecordModify(Oceanforex.WinApp.MT4.TradeRecoredModifyModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPumpService/AdmTradeRecordModify", ReplyAction="http://tempuri.org/IPumpService/AdmTradeRecordModifyResponse")]
        System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> AdmTradeRecordModifyAsync(Oceanforex.WinApp.MT4.TradeRecoredModifyModel model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPumpServiceChannel : Oceanforex.WinApp.MT4.IPumpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PumpServiceClient : System.ServiceModel.ClientBase<Oceanforex.WinApp.MT4.IPumpService>, Oceanforex.WinApp.MT4.IPumpService {
        
        public PumpServiceClient() {
        }
        
        public PumpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PumpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PumpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PumpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Oceanforex.WinApp.MT4.TradeRecordSE[] GetAllOpenTrade() {
            return base.Channel.GetAllOpenTrade();
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetAllOpenTradeAsync() {
            return base.Channel.GetAllOpenTradeAsync();
        }
        
        public Oceanforex.WinApp.MT4.TradeRecordSE[] GetOpenTrade(int login, string group) {
            return base.Channel.GetOpenTrade(login, group);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetOpenTradeAsync(int login, string group) {
            return base.Channel.GetOpenTradeAsync(login, group);
        }
        
        public Oceanforex.WinApp.MT4.TradeRecordSE[] GetOpenTradeByLogin(int login) {
            return base.Channel.GetOpenTradeByLogin(login);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetOpenTradeByLoginAsync(int login) {
            return base.Channel.GetOpenTradeByLoginAsync(login);
        }
        
        public Oceanforex.WinApp.MT4.MarginLevelSE GetMarginLevel(int login) {
            return base.Channel.GetMarginLevel(login);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MarginLevelSE> GetMarginLevelAsync(int login) {
            return base.Channel.GetMarginLevelAsync(login);
        }
        
        public System.Nullable<bool> TradeUserPasswordCheck(int login, string pwd) {
            return base.Channel.TradeUserPasswordCheck(login, pwd);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> TradeUserPasswordCheckAsync(int login, string pwd) {
            return base.Channel.TradeUserPasswordCheckAsync(login, pwd);
        }
        
        public Oceanforex.WinApp.MT4.TradeRecordSE[] GetTradesRecordHistory(int login, System.DateTime from, System.DateTime to) {
            return base.Channel.GetTradesRecordHistory(login, from, to);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeRecordSE[]> GetTradesRecordHistoryAsync(int login, System.DateTime from, System.DateTime to) {
            return base.Channel.GetTradesRecordHistoryAsync(login, from, to);
        }
        
        public Oceanforex.WinApp.MT4.SymbolInfoSE[] GetAllSymbolInfo() {
            return base.Channel.GetAllSymbolInfo();
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.SymbolInfoSE[]> GetAllSymbolInfoAsync() {
            return base.Channel.GetAllSymbolInfoAsync();
        }
        
        public Oceanforex.WinApp.MT4.UserRecordSE GetUserRecordsByLogin(int login) {
            return base.Channel.GetUserRecordsByLogin(login);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.UserRecordSE> GetUserRecordsByLoginAsync(int login) {
            return base.Channel.GetUserRecordsByLoginAsync(login);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult NewUser(Oceanforex.WinApp.MT4.UserRecordSE userRecord) {
            return base.Channel.NewUser(userRecord);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> NewUserAsync(Oceanforex.WinApp.MT4.UserRecordSE userRecord) {
            return base.Channel.NewUserAsync(userRecord);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult TradeTranscationBalance(int login, double balance) {
            return base.Channel.TradeTranscationBalance(login, balance);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeTranscationBalanceAsync(int login, double balance) {
            return base.Channel.TradeTranscationBalanceAsync(login, balance);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult ChangePassword(int login, string newPassword) {
            return base.Channel.ChangePassword(login, newPassword);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> ChangePasswordAsync(int login, string newPassword) {
            return base.Channel.ChangePasswordAsync(login, newPassword);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult ChangePasswordInvestor(int login, string newPassword) {
            return base.Channel.ChangePasswordInvestor(login, newPassword);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> ChangePasswordInvestorAsync(int login, string newPassword) {
            return base.Channel.ChangePasswordInvestorAsync(login, newPassword);
        }
        
        public string[] GetAllGroup() {
            return base.Channel.GetAllGroup();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllGroupAsync() {
            return base.Channel.GetAllGroupAsync();
        }
        
        public Oceanforex.WinApp.MT4.MT4HistoryStats[] GetHistoryStats(int login, System.DateTime startTime, System.DateTime endTime, Oceanforex.WinApp.MT4.EnumMT4Stats statsSort) {
            return base.Channel.GetHistoryStats(login, startTime, endTime, statsSort);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4HistoryStats[]> GetHistoryStatsAsync(int login, System.DateTime startTime, System.DateTime endTime, Oceanforex.WinApp.MT4.EnumMT4Stats statsSort) {
            return base.Channel.GetHistoryStatsAsync(login, startTime, endTime, statsSort);
        }
        
        public Oceanforex.WinApp.MT4.SymbolInfoSE GetSymbolInfo(string symbol) {
            return base.Channel.GetSymbolInfo(symbol);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.SymbolInfoSE> GetSymbolInfoAsync(string symbol) {
            return base.Channel.GetSymbolInfoAsync(symbol);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult TradeTranscationOpen(Oceanforex.WinApp.MT4.TradeTransInfoSE ttim) {
            return base.Channel.TradeTranscationOpen(ttim);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeTranscationOpenAsync(Oceanforex.WinApp.MT4.TradeTransInfoSE ttim) {
            return base.Channel.TradeTranscationOpenAsync(ttim);
        }
        
        public Oceanforex.WinApp.MT4.TradeOpenRsponseModel[] TradeOpenAll(Oceanforex.WinApp.MT4.TradeOpenModel[] trades) {
            return base.Channel.TradeOpenAll(trades);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeOpenRsponseModel[]> TradeOpenAllAsync(Oceanforex.WinApp.MT4.TradeOpenModel[] trades) {
            return base.Channel.TradeOpenAllAsync(trades);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult TradeTranscationClose(int orderTicket, double price) {
            return base.Channel.TradeTranscationClose(orderTicket, price);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeTranscationCloseAsync(int orderTicket, double price) {
            return base.Channel.TradeTranscationCloseAsync(orderTicket, price);
        }
        
        public Oceanforex.WinApp.MT4.TradeCloseResponseModel[] TradeCloseAll(Oceanforex.WinApp.MT4.TradeCloseModel[] closes) {
            return base.Channel.TradeCloseAll(closes);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeCloseResponseModel[]> TradeCloseAllAsync(Oceanforex.WinApp.MT4.TradeCloseModel[] closes) {
            return base.Channel.TradeCloseAllAsync(closes);
        }
        
        public Oceanforex.WinApp.MT4.TradeModifyResponseModel[] TradeModifyAll(Oceanforex.WinApp.MT4.TradeModifyModel[] modifys) {
            return base.Channel.TradeModifyAll(modifys);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.TradeModifyResponseModel[]> TradeModifyAllAsync(Oceanforex.WinApp.MT4.TradeModifyModel[] modifys) {
            return base.Channel.TradeModifyAllAsync(modifys);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult TradeDeleteAllHistory(int login) {
            return base.Channel.TradeDeleteAllHistory(login);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> TradeDeleteAllHistoryAsync(int login) {
            return base.Channel.TradeDeleteAllHistoryAsync(login);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult AdmTradeRecordModifyTimeAndPrice(int _orderTicket, System.DateTime _openTime, double _openPrice, System.DateTime _closeTime, double _closePrice, double _profit) {
            return base.Channel.AdmTradeRecordModifyTimeAndPrice(_orderTicket, _openTime, _openPrice, _closeTime, _closePrice, _profit);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> AdmTradeRecordModifyTimeAndPriceAsync(int _orderTicket, System.DateTime _openTime, double _openPrice, System.DateTime _closeTime, double _closePrice, double _profit) {
            return base.Channel.AdmTradeRecordModifyTimeAndPriceAsync(_orderTicket, _openTime, _openPrice, _closeTime, _closePrice, _profit);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult AdmTradeRecordModifyTime(int _orderTicket, System.DateTime _openTime, System.DateTime _closeTime) {
            return base.Channel.AdmTradeRecordModifyTime(_orderTicket, _openTime, _closeTime);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> AdmTradeRecordModifyTimeAsync(int _orderTicket, System.DateTime _openTime, System.DateTime _closeTime) {
            return base.Channel.AdmTradeRecordModifyTimeAsync(_orderTicket, _openTime, _closeTime);
        }
        
        public Oceanforex.WinApp.MT4.MT4OperResult AdmTradeRecordModify(Oceanforex.WinApp.MT4.TradeRecoredModifyModel model) {
            return base.Channel.AdmTradeRecordModify(model);
        }
        
        public System.Threading.Tasks.Task<Oceanforex.WinApp.MT4.MT4OperResult> AdmTradeRecordModifyAsync(Oceanforex.WinApp.MT4.TradeRecoredModifyModel model) {
            return base.Channel.AdmTradeRecordModifyAsync(model);
        }
    }
}
